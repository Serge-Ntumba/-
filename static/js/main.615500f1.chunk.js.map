{"version":3,"sources":["components/modal/Modal.js","components/table/Table.js","App.js","reportWebVitals.js","index.js"],"names":["ShowModal","setOpenModal","setCloseModal","useState","temp","setTemp","useEffect","fetch","then","results","json","data","temp_c","current","ReactDom","createPortal","className","onClick","id","document","getElementById","headRows","Array","fill","map","_","index","calcTime","start","end","split","startHours","startMinutes","finalMinutes","finalHours","Math","trunc","calcTotal","days","reduce","acc","cur","hours","minutes","Number","transformDays","daysMap","Date","el","String","padStart","Start","End","Table","isOpen","setIsOpen","searched","setSearched","order","setOrder","page","setPage","rowsPerPage","setRowsPerPage","isOpenHandler","filteredRows","useMemo","filter","row","Fullname","toLowerCase","includes","rows","result","slice","sort","a","b","Paper","Input","value","placeholder","onChange","e","target","TableContainer","component","sx","minWidth","TableHead","TableRow","TableCell","TableSortLabel","active","direction","prev","TableBody","border","scope","Days","day","i","align","time","TablePagination","rowsPerPageOptions","count","length","onPageChange","event","newPage","onRowsPerPageChange","parseInt","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.615500f1.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactDom from \"react-dom\";\nimport \"./Modal.css\";\n\nconst ShowModal = ({ setOpenModal, setCloseModal }) => {\n  const [temp, setTemp] = useState(0);\n  useEffect(() => {\n    const key = \"b448a501ba7b473cbe6103821211410\";\n    fetch(\n      `http://api.weatherapi.com/v1/current.json?key=${key}&q=yekaterinburg&aqi=no`\n    )\n      .then((results) => results.json())\n      .then((data) => {\n        const { temp_c } = data.current;\n        setTemp(temp_c);\n      });\n  }, []);\n\n  return ReactDom.createPortal(\n    <>\n      <div className=\"overlay\" />\n      <div className=\"modalBackground\">\n        <div className=\"modalContainer\">\n          <div className=\"titleCloseBtn\">\n            <button\n              onClick={() => {\n                setCloseModal(false);\n              }}\n            >\n              X\n            </button>\n          </div>\n          <div className=\"title\">\n            <h1> Погода в Екатеринбург</h1>\n          </div>\n          <div className=\"body\">\n            <p>{temp} °C</p>\n          </div>\n          <div className=\"footer\">\n            <button\n              onClick={() => {\n                setCloseModal(false);\n              }}\n              id=\"cancelBtn\"\n            >\n              Okay\n            </button>\n          </div>\n        </div>\n      </div>\n    </>,\n    document.getElementById(\"portal\")\n  );\n};\n\nexport default ShowModal;\n","import React, { useState, useMemo } from \"react\";\nimport TableBase from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport Input from \"@mui/material/Input\";\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport TablePagination from '@mui/material/TablePagination';\nimport ShowModal from \"../modal/Modal\";\n\nconst headRows = [\n  \"User\",\n  ...Array(31)\n    .fill(1)\n    .map((_, index) => index + 1),\n  \"Monthly total\",\n];\n\nconst calcTime = (start, end) => {\n  const [startHours, startMinutes] = start.split(\"-\");\n  const [endHours, endMinutes] = end.split(\"-\");\n\n  const hours = endHours - startHours;\n  const minutes = endMinutes - startMinutes;\n\n  const finalMinutes = hours * 60 + minutes;\n  const finalHours = Math.trunc(finalMinutes / 60);\n  const result = `${finalHours}-${finalMinutes - finalHours * 60}`;\n\n  return result;\n};\n\nconst calcTotal = (days) => {\n  const { hours, minutes } = days.reduce(\n    (acc, cur) => {\n      const [hours, minutes] = cur.split(\"-\");\n      acc.hours += Number(hours);\n      acc.minutes += Number(minutes);\n      return acc;\n    },\n    { hours: 0, minutes: 0 }\n  );\n\n  const finalHours = Math.trunc(minutes / 60);\n  return `${hours + finalHours}-${minutes - finalHours * 60}`;\n};\n\nconst showTime = (time) => {\n  if (time[0] === \"0\" && time[2] === \"0\") {\n    return 0;\n  }\n\n  return time;\n};\n\nconst transformDays = (days) => {\n  const daysMap = days.reduce((acc, cur) => {\n    const [, , day] = cur.Date.split(\"-\");\n    acc[day] = cur;\n    return acc;\n  }, {});\n\n  const list = Array(31)\n    .fill(1)\n    .map((_, index) => index + 1);\n  return list.map((el) => {\n    return (\n      daysMap[String(el).padStart(2, \"0\")] ?? {\n        Date: 0,\n        Start: \"0-0\",\n        End: \"0-0\",\n      }\n    );\n  });\n};\n\nconst Table = ({ data }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [searched, setSearched] = useState(\"\");\n  const [order, setOrder] = useState(\"asc\");\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const isOpenHandler = () => {\n    setIsOpen(true);\n  };\n  const isCloseHandler = () => {\n    setIsOpen(false);\n  };\n\n  const filteredRows = useMemo(() => data\n    .filter((row) => row.Fullname.toLowerCase().includes(searched.toLowerCase())), [data, searched])\n\n  const rows = useMemo(\n    () => {\n      const result = filteredRows\n        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n\n      if (order) {\n        return result.sort((a, b) => {\n          if (a.Fullname === b.Fullname) return 0;\n\n          if (order === 'asc') {\n            return a.Fullname > b.Fullname ? 1 : -1;\n          } else {\n            return a.Fullname < b.Fullname ? 1 : -1;\n          }\n        })\n      }\n\n      return result;\n    },\n    [filteredRows, order, page, rowsPerPage]\n  );\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <>\n      {isOpen ? (\n        <ShowModal\n          setOpenModal={isOpenHandler}\n          setCloseModal={isCloseHandler}\n        />\n      ) : (\n        <Paper>\n          <Input\n            value={searched}\n            placeholder=\"Search\"\n            onChange={(e) => {\n              setSearched(e.target.value);\n              setPage(0);\n            }}\n          />\n          <TableContainer component={Paper}>\n            <TableBase sx={{ minWidth: 650 }} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>\n                    <TableSortLabel\n                      active={true}\n                      direction={order}\n                      onClick={() => setOrder((prev) => prev === 'asc' ? 'desc' : 'asc')}\n                    >\n                      <button onClick={isOpenHandler}>{headRows[0]}</button>\n                    </TableSortLabel>\n                  </TableCell>\n                  {headRows.slice(1).map((row) => (\n                    <TableCell key={row}>\n                      <button onClick={isOpenHandler}>{row}</button>\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.map((row) => (\n                  <TableRow\n                    key={row.Fullname}\n                    sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                  >\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.Fullname}\n                    </TableCell>\n                    {transformDays(row.Days).map((day, i) => (\n                      <TableCell key={i} align=\"right\">\n                        {showTime(calcTime(day.Start, day.End))}\n                      </TableCell>\n                    ))}\n                    <TableCell>\n                      {calcTotal(\n                        transformDays(row.Days).map((day) =>\n                          calcTime(day.Start, day.End)\n                        )\n                      )}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </TableBase>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={filteredRows.length}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Paper>\n      )}\n    </>\n  );\n};\n\nexport default Table;\n","import data from \"./data/data.json\";\nimport Table from \"./components/table/Table\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Table data={data} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}